name: CI/CD Pipeline

# Триггеры для запуска workflow
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# Переменные окружения
env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      # 1. Чекаут кода из репозитория
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Настройка Docker Buildx для сборки образов
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Установка docker-compose
      - name: Install docker-compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # 4. Логин в Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}
          registry: docker.io

      # 5. Сборка и пуш образов в Docker Hub
      - name: Build and push Docker images
        run: |
          # Сборка и пуш task-service
          docker build -t ${{ env.DOCKERHUB_USERNAME }}/task-service:${{ github.sha }} ./TaskService
          docker push ${{ env.DOCKERHUB_USERNAME }}/task-service:${{ github.sha }}
          docker tag ${{ env.DOCKERHUB_USERNAME }}/task-service:${{ github.sha }} ${{ env.DOCKERHUB_USERNAME }}/task-service:latest
          docker push ${{ env.DOCKERHUB_USERNAME }}/task-service:latest
          
          # Сборка и пуш category-service
          docker build -t ${{ env.DOCKERHUB_USERNAME }}/category-service:${{ github.sha }} ./CategoryService
          docker push ${{ env.DOCKERHUB_USERNAME }}/category-service:${{ github.sha }}
          docker tag ${{ env.DOCKERHUB_USERNAME }}/category-service:${{ github.sha }} ${{ env.DOCKERHUB_USERNAME }}/category-service:latest
          docker push ${{ env.DOCKERHUB_USERNAME }}/category-service:latest

      # 6. Подъем всех контейнеров
      - name: Deploy containers
        run: |
          docker-compose up -d

      # 7. Проверка состояния контейнеров (диагностика)
      - name: Check running containers
        run: |
          docker ps -a

      # 8. Вывод логов для диагностики
      - name: Check container logs
        run: |
          docker-compose logs

      # 9. Ожидание готовности SQL Server
      - name: Wait for SQL Server
        run: |
          until docker exec sql-server-container /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Kwameldx666 -Q "SELECT 1"; do
            echo "Waiting for SQL Server..."
            sleep 5
          done

      # 10. Проверка работоспособности через HTTP-запросы
      - name: Test containers health
        run: |
          curl --retry 15 --retry-delay 5 --retry-max-time 300 http://localhost:5001/api/Tasks || echo "Task Service failed"
          curl --retry 15 --retry-delay 5 --retry-max-time 300 http://localhost:5000/api/Categories || echo "Category Service failed"

      # 11. Остановка и очистка
      - name: Cleanup
        if: always()
        run: |
          docker-compose down --volumes
