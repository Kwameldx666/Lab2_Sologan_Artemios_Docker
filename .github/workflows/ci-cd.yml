name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Чекаут кода
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Настройка Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Логин в Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      # 4. Сборка и пуш образов
      - name: Build and push Docker images
        run: |
          # Сборка обоих сервисов
          docker-compose build
          
          # Тегирование и пуш для task-service
          docker tag task-service:latest ${DOCKER_USERNAME}/task-service:latest
          docker push ${DOCKER_USERNAME}/task-service:latest
          
          # Тегирование и пуш для category-service
          docker tag category-service:latest ${DOCKER_USERNAME}/category-service:latest
          docker push ${DOCKER_USERNAME}/category-service:latest

      # 5. Запуск контейнеров
      - name: Start containers
        run: |
          docker-compose up -d

      # 6. Проверка работоспособности
      - name: Health check
        run: |
          # Ждем запуска сервисов
          sleep 15
          
          # Проверка TaskService
          curl --retry 5 --retry-delay 5 --retry-max-time 30 \
            http://localhost:5001/api/tasks | grep "OK" || exit 1
          
          # Проверка CategoryService
          curl --retry 5 --retry-delay 5 --retry-max-time 30 \
            http://localhost:5000/api/categories | grep "OK" || exit 1

      # 7. Очистка
      - name: Cleanup
        if: always()
        run: |
          docker-compose down -v
          docker system prune -f --volumes

      # 8. Уведомление об успехе
      - name: Success notification
        if: success()
        run: |
          echo "Build and deployment completed successfully!"
