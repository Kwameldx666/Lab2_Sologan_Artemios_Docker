name: CI/CD Pipeline

# Триггеры для запуска workflow
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Переменные окружения
env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      # 1. Чекаут кода
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Настройка Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Логин в Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      # 4. Сборка и пуш Docker-образов для task-service и category-service
      - name: Build and push Docker images
        run: |
          # Сборка и пуш task-service
          docker build -t ${{ env.DOCKERHUB_USERNAME }}/task-service:${{ github.sha }} ./TaskService
          docker push ${{ env.DOCKERHUB_USERNAME }}/task-service:${{ github.sha }}
          docker tag ${{ env.DOCKERHUB_USERNAME }}/task-service:${{ github.sha }} ${{ env.DOCKERHUB_USERNAME }}/task-service:latest
          docker push ${{ env.DOCKERHUB_USERNAME }}/task-service:latest

          # Сборка и пуш category-service
          docker build -t ${{ env.DOCKERHUB_USERNAME }}/category-service:${{ github.sha }} ./CategoryService
          docker push ${{ env.DOCKERHUB_USERNAME }}/category-service:${{ github.sha }}
          docker tag ${{ env.DOCKERHUB_USERNAME }}/category-service:${{ github.sha }} ${{ env.DOCKERHUB_USERNAME }}/category-service:latest
          docker push ${{ env.DOCKERHUB_USERNAME }}/category-service:latest

      # 5. Разворачиваем контейнеры через docker-compose
      - name: Deploy containers
        run: |
          docker-compose up -d

      # 6. Проверка работоспособности через curl
      - name: Test containers health
        run: |
          # Даем время контейнерам запуститься и пройти healthcheck
          sleep 60
          # Проверка task-service
          curl --retry 5 --retry-delay 5 --retry-max-time 60 http://localhost:5001/api/Tasks || exit 1
          # Проверка category-service
          curl --retry 5 --retry-delay 5 --retry-max-time 60 http://localhost:5000/api/Categories || exit 1

      # 7. Очистка после тестов
      - name: Cleanup
        if: always()
        run: |
          docker-compose down --volumes --rmi all
          docker system prune -f

      # 8. Коммит и пуш изменений (если нужно)
      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git add .
          git commit -m "Update from CI/CD pipeline" || echo "No changes to commit"
          git push
